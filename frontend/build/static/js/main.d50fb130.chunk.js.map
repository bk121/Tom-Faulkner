{"version":3,"sources":["components/Textbox.js","App.js","reportWebVitals.js","index.js"],"names":["Textbox","props","useState","input","setInput","output","setOutput","useEffect","fetch","URLSearchParams","email","then","res","json","data","text","console","log","Form","onSubmit","target","value","className","TextArea","name","icon","type","placeholder","style","minWidth","minHeight","Button","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"mRAuCeA,EAnCC,SAACC,GAEf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAiBA,OAXAC,qBAAU,WACRC,MAAM,SAAS,IAAIC,gBAAgB,CACjCC,MAAOP,KACPQ,MAAK,SAACC,GAAD,OACLA,EAAIC,OAAOF,MAAK,SAACG,GACbR,EAAUQ,EAAKC,MACfC,QAAQC,IAAIH,EAAKC,KACpB,GAJI,GAMR,GAAE,CAACZ,IAGF,gCACA,eAACe,EAAA,EAAD,CAAMC,SAjBa,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACrBhB,EAASgB,EAAOL,KAAKM,MACtB,EAe+BC,UAAU,UAAxC,UACE,cAACJ,EAAA,EAAKK,SAAN,CAAeC,KAAK,OAAOC,KAAK,SAASC,KAAK,OAAOC,YAAY,cAAcC,MAAO,CAAEC,SAAU,KAAMC,UAAW,OAGnH,cAACC,EAAA,EAAD,CAAQL,KAAK,SAAb,uBAEF,cAACH,EAAA,EAAD,CAAUF,MAAOhB,EAAQsB,YAAY,eAAeC,MAAO,CAAEC,SAAU,KAAMC,UAAW,SAK3F,ECHcE,MA9Bf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,KAGL,ECEcW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,ECJYO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACD,cAAC,EAAD,KAMJZ,G","file":"static/js/main.d50fb130.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Button, Form, TextArea} from \"semantic-ui-react\";\nimport './Textbox.css'\n\nconst Textbox = (props) => {\n\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  const handleSubmit = ({target})=>{\n    setInput(target.text.value)\n  }\n\n  useEffect(()=>{\n    fetch(\"/data?\"+new URLSearchParams({\n      email: input,\n  })).then((res) =>\n      res.json().then((data) => {\n          setOutput(data.text);\n          console.log(data.text)\n      })\n    );\n  }, [input])\n\n  return (\n    <div>\n    <Form onSubmit={handleSubmit} className=\"Textbox\">\n      <Form.TextArea name='text' icon='search' type=\"text\" placeholder=\"Input email\" style={{ minWidth: 1200, minHeight: 200 }}\n      >\n      </Form.TextArea>\n      <Button type='submit'>Submit</Button>\n    </Form>\n    <TextArea value={output} placeholder=\"Output email\" style={{ minWidth: 1200, minHeight: 200 }}>\n\n    </TextArea>\n    </div>\n  );\n}\n\nexport default Textbox","import React from \"react\";\nimport './App.css';\nimport Textbox from './components/Textbox'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Textbox/>\n    </div>\n  );\n}\n\n// function App() {\n//   // usestate for setting a javascript\n//   // object for storing and using data\n \n\n//   return (\n//       <div className=\"App\">\n//           <header className=\"App-header\">\n//               <h1>React and flask</h1>\n//               {/* Calling a data from setdata for showing */}\n//               <p>{data.name}</p>\n//               <p>{data.age}</p>\n//               <p>{data.date}</p>\n//               <p>{data.programming}</p>\n\n//           </header>\n//       </div>\n//   );\n// }\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}